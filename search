import sys
import bibtexparser
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *



class SearchDialog(QDialog):
    def __init__(self, *args, **kwargs):
        super(SearchDialog, self).__init__(*args, **kwargs)

        self.setWindowsTitle("Search")
        self.setFixedWidht(600)
        self.setFixedHeight(300)
        self.createButton = QPushButton("Search")
        self.line1 = QLineEdit()
        self.line2 = QLineEdit()
        self.line3 = QLineEdit()
        self.line4 = QLineEdit()


        self.text1 = QLabel("Author")
        self.text2 = QLabel("Type:")
        self.text3 = QLabel("Title")
        self.text4 = QLabel("Year")


        layout = QFormLayout()
        layout.addWidget(self.boxlabel)

        self.setLayout(layout)

        layout.addWidget(self.text1)

        layout.addWidget(self.line1)
        layout.addWidget(self.text2)

        layout.addWidget(self.line2)
        layout.addWidget(self.text3)

        layout.addWidget(self.line3)
        layout.addWidget(self.text4)
        layout.addWidget(self.line4)

        self.searchButton.clicked.connect(self.btn_clk)
        self.setLayout(layout)
        def btn_clk(self):
            author = self.line1.text()
            type= self.line2.text()
            title = self.line3.text()
            year = self.line4.text()
            newfile = open(str())

        class Window(QtWidgets.QWidget):
            def __init__(self, rows, columns):
                QtWidgets.QWidget.__init__(self)
                self.table = QtGui.QTableWidget(self)
                self.table.setRowCount(rows)
                self.table.setColumnCount(columns)
                for column in range(columns):
                    for row in range(rows):
                        item = QtGui.QTableWidgetItem('Text%d' % row)
                        self.table.setItem(row, column, item)
                self.edit = QtGui.QLineEdit(self)
                self.button = QtGui.QPushButton('Search', self)
                self.button.clicked.connect(self.handleButton)
                layout = QtGui.QVBoxLayout(self)
                layout.addWidget(self.table)
                layout.addWidget(self.edit)
                layout.addWidget(self.button)

            def handleButton(self):
                items = self.table.findItems(
                    self.edit.text(), QtCore.Qt.MatchExactly)
                if items:
                    results = '\n'.join(
                        'row %d column %d' % (item.row() + 1, item.column() + 1)
                        for item in items)
                else:
                    results = 'Found Nothing'
                QtGui.QMessageBox.information(self, 'Search Results', results)
                
                app = QApplication(sys.argv)
if (QDialog.Accepted == True):
    window = MainWindow()
    window.show()
sys.exit(app.exec_())
                
                
